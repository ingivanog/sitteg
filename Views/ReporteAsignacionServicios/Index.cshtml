@model ReporteAsignacionBusquedaModel
@{
    DateTime endDate = DateTime.Now;
    endDate = endDate.AddDays(1);
}

<head>
    <script>
        function submitSearch() {
            var Mydata = $("#frmSearch").serialize();
            $.ajax({
                url: '@Url.Action("ajax_BuscarReporte")',
                type: 'POST',
                data: Mydata,
                success: function (result) {
                    $("#listadoReporteAsignacion").html(result);
                }
            });
        }

        function startChange() {
            var endPicker = $("#end").data("kendoDatePicker"),
                startDate = this.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate() + 1);
                endPicker.min(startDate);
            }
        }

        function endChange() {
            var startPicker = $("#start").data("kendoDatePicker"),
                endDate = this.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate() - 1);
                startPicker.max(endDate);
            }
        }

        $(".export-pdf").click(function () {
            // Convert the DOM element to a drawing using kendo.drawing.drawDOM
            alert("caigo")
            kendo.drawing.drawDOM($(".content-wrapper"))
                .then(function (group) {
                    // Render the result as a PDF file
                    return kendo.drawing.exportPDF(group, {
                        paperSize: "auto",
                        margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" }
                    });
                })
                .done(function (data) {
                    // Save the PDF file
                    kendo.saveAs({
                        dataURI: data,
                        fileName: "TransitoTransporte.pdf",
                        proxyURL: "@Url.Action("Pdf_Export_Save")"
                    });
                });
        });


    </script>
</head>


<div class="mainContainer bg-light">
    <section class="mx-md-3 mx-lg-4 mx-xl-5 bg-white boxShadow my-5 rounded">
        <div class="row align-items-center justify-content-between px-4 px-md-4 pt-3 pb-2">
            <div class="col-12 col-md-6 col-lg-5 col-xl-auto">
                <div class="row align-items-center justify-content-center justify-content-md-start">
                    <div class="col-auto">
                        <i class="icon-edit-car h1 colorPrimary"></i>
                    </div>
                    <div class="col-auto my-3">
                        <h2 class="m-0 h3"><b>Reporte de asignación de servicios</b></h2>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-12">
                <div class="bg-light py-1"></div>
            </div>
        </div>
        <div class="col-12 col-md-auto mt-4 mb-2">
            <h5 class="px-4"><b>Busqueda de Solicitudes</b></h5>
            <h6 class="px-4 text-muted">Realiza una búsqueda personalizada de Solicitudes.</h6>
        </div>
        <form id="frmSearch" class="row px-4 mb-4 align-items-end" method="post">

            <div class="col-12 col-md-6 col-lg-4">
                <div class="controlForm mb-3">
                    <label>Grúa:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdGrua)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione grúa...")
                            .HtmlAttributes(new { style = "width:100%;" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Grua_Read", "ReporteAsignacionServicios");
                                });
                            }))
                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-4">
                <div class="controlForm my-3">
                    <label>Inicio:</label>
                    @(Html.Kendo().DatePickerFor(t => t.FechaInicio)
                        .Value(DateTime.Now)
                        .Events(e => e.Change("startChange"))
                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", id = "start" })
                        )

                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-4">
                <div class="controlForm mb-3">
                    <label>Tipo de evento:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdEvento)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione Evento...")
                            .HtmlAttributes(new { style = "width:100%;" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Evento_Read", "ReporteAsignacionServicios");
                                });
                            }))
                    </span>
                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-4">
                <div class="controlForm mb-3">
                    <label>Pensión:</label>
                    <span>
                        @(Html.Kendo().DropDownListFor(d => d.IdPension)
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .OptionLabel("Seleccione pensión...")
                            .HtmlAttributes(new { style = "width:100%;" })
                            .Filter(FilterType.Contains)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("Dependencia_Read", "TransitoTransporte");
                                });
                            }))
                    </span>
                </div>
            </div>

            

            <div class="col-12 col-md-6 col-lg-4">
                <div class="controlForm my-3">
                    <label>Fin:</label>
                    @(Html.Kendo().DatePickerFor(t => t.FechaFin)
                        .Value(endDate)
                        .Events(e => e.Change("endChange"))
                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker", id = "end" })
                        )

                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-2">
                <div class="controlButton my-3">
                    <button class="btnPrimary" type="button" onclick="submitSearch()">  <h5 class="m-0"><b>Buscar</b></h5></button>

                </div>
            </div>

            <div class="col-12 col-md-6 col-lg-2">
                <div class="controlButton my-3">

                    <button type="button" onclick="submitExport()" class='btnPrimary'><h5 class="m-0"><i class='icon-data m-0'></i>&nbsp;&nbsp; <b>Reporte</b></h5></button>

                </div>
            </div>

        </form>

        <div id="listadoReporteAsignacion">
            <partial name="_ListadoReporteAsignacion" model="Model.ListReporteAsignacion" />
        </div>
    </section>
</div>
